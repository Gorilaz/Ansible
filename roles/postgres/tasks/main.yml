#https://stackoverflow.com/questions/25629933/ansible-copy-ssh-key-from-one-host-to-another
#/etc/ansible/roles/postgres/tasks/main.yml
- name: Ensure group "{{postgresql_group}}" exists
  group:
    name: "{{postgresql_group}}"
    state: present
  tags: [ tested, preinstall ]
#- debug:
#    msg: "{{ '{{ postgresql_password }}' | password_hash('sha512', 'vAD8nLXV') }}"
- name: Ensure user "{{postgresql_user}}" exists
  user:
    name: "{{ postgresql_user }}"
    state: present
    password: "{{ '{{ postgresql_password }}' | password_hash('sha512', 'vAD8nLXV') }}"
    group: "{{ postgresql_group }}"
    update_password: on_create
  tags: [ tested, preinstall ]

- name: Ensure yum  work with proxy(http)
  lineinfile: dest=/etc/yum.conf state=present regexp="{{ http_proxy }}" insertafter=EOF line="proxy={{ http_proxy }}"
  ignore_errors: yes
  tags: [ tested, preinstall ]

- name: Install PostgreSQL+standart packages
  yum: name={{ item }} update_cache=true state=installed
  with_items:
    - postgresql11.x86_64
    - pgbouncer.x86_64
    - pgbackrest.x86_64
    - repmgr11.x86_64
    - pg_cron_11 
    - pgcenter
  tags: [ tested, install ]

- name: configure postgresql-11.service
  lineinfile: 
    dest: "/usr/lib/systemd/system/postgresql-11.service"
    regexp: "^Environment=PGDATA=.*$" 
    line: "Environment=PGDATA={{ postgresql_pgdata }}"
    state: present
  ignore_errors: yes
  tags: [ tested, install ]

- name: Check if PostgreSQL database is initialized on pgmaster group.
  stat:
    path: "{{ postgresql_pgdata }}/PG_VERSION"
  register: pgdata_dir_version
  #when: "'pgmaster' in group_names"
  tags: [ tested, install ]
  
- name: Ensure PostgreSQL database is initialized on pgmaster group.
  command: "/usr/pgsql-11/bin/initdb -k -D {{ postgresql_pgdata }}"
  when: 
    - not pgdata_dir_version.stat.exists
    - "'pgmaster' in group_names"
  become: true
  become_user: "{{ postgresql_user }}"
  vars:
    ansible_ssh_pipelining: true  
  tags: [ tested, install ]

- name: Configure postgresql.conf.
  lineinfile:
    dest: "/pg_data/11/postgresql.conf"
    regexp: "^#?{{ item.option }}[^#]*(#?.*)$"
    line: "{{ item.option }} = {{ item.value }} \\1"
    state: "{{ item.state | default('present') }}"
    backrefs: yes
  with_items: "{{ postgresql_global_config_options }}"
  when: "'pgmaster' in group_names"
  notify: restart postgresql
  tags: [ tested, install ]
  
- name: Configure pg_hba.conf
  template: src=pg_hba.conf.j2 dest={{ postgresql_pgdata }}/pg_hba.conf mode=0750 owner="{{ postgresql_user }}" group="{{ postgresql_group }}"
  when: "'pgmaster' in group_names"
  notify: restart postgresql
  tags: [ tested, install ]
  
- name: Configure .bash_profile
  lineinfile:
    dest: "/home/postgres/.bash_profile"
    regexp: "^#?{{ item.option }}[^#]*(#?.*)$"
    line: "{{ item.option }}={{ item.value }} \\1"
    backrefs: yes
    insertafter: EOF
    state: "{{ item.state | default('present') }}"
  with_items: 
    - {option: export PGHOST, value: "localhost"}
    - {option: export PGDATA, value: "{{ postgresql_pgdata }}"}
    - {option: export PGPORT, value: "{{ postgresql_port }}"}
    - {option: export PGUSER, value: "{{ postgresql_user }}"}
    - {option: export PGDATABASE, value: "{{ postgresql_user }}"}
  tags: [ tested, install ]
  
- name: Adds pg_cron,pg_stat_statements,pg_buffercache extension to the database postgres
  postgresql_ext:
    port: "{{ postgresql_port }}"
    name: "{{ item }}"
    db: "{{ postgresql_user }}"
  with_items: 
    - pg_cron
    - pg_stat_statements
    - pg_buffercache
  when: "'pgmaster' in group_names"